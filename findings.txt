Summarise your findings here (see specification).

The 'mystery1' board is of "extremely hard" difficulty.
The 'mystery3' board is of "hard" difficulty.
The 'mystery2' board is impossible to solve.

-----------------------------------------------------
| Board Tested	| Time elasped	| No. of Recursions |
|----------------------------------------------------
|    Easy	|    0.0129 s	|	21,171	    |
|    Medium 	|    0.0933 s	|	17,832	    |
|    Mystery1	|    2.4105 s	|	439,378	    |
|    Mystery3  	|    0.0689 s	|	465,044	    |
-----------------------------------------------------

Credit: Code for execution timer is taken from the example in
http://www.cplusplus.com/reference/chrono/high_resolution_clock/now/

The findings above are based on the execution time required to solve
each board, including the time to display and cout statements.

However, the only difference is the difficulty of the board, hence the
time can be used as a comparison of the relative difficulty of each
board.

The longer the execution time, the harder the difficulty, hence
mystery3 is of the "hard" while mystery1 is of the "extremely hard"
difficulty.

A solution for mystery2 cannot be found.

Execution time is also compared against the number of times
make_move() (or recursion) is called for each board.

Clearly, this is not proportionate to the time taken for each board
since mystery3 required 465,044 recursions yet took only 0.0689s
compared to mystery2 which took 439,378 recursions but had an
execution time of 2.4105s. This is because mystery1 has a "deeper"
recursion each time make_move() is called, probably due to a higher number
of possible moves in each cell. 

Note that I was in quarantine during this coursework with slow wifi
connection. Execution time may be affected as a result.
